{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Directive, Input, Injectable, Component, HostBinding, EventEmitter, Output, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nfunction TabsetComponent_li_1_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵlistener(\"click\", function TabsetComponent_li_1_span_4_Template_span_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const tabz_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      $event.preventDefault();\n      return i0.ɵɵresetView(ctx_r4.removeTab(tabz_r1));\n    });\n    i0.ɵɵtext(1, \" \\u274C\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a1) {\n  return [\"nav-item\", a1];\n};\nfunction TabsetComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 3);\n    i0.ɵɵlistener(\"keydown\", function TabsetComponent_li_1_Template_li_keydown_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const i_r2 = restoredCtx.index;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.keyNavActions($event, i_r2));\n    });\n    i0.ɵɵelementStart(1, \"a\", 4);\n    i0.ɵɵlistener(\"click\", function TabsetComponent_li_1_Template_a_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const tabz_r1 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(tabz_r1.active = true);\n    });\n    i0.ɵɵelementStart(2, \"span\", 5);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, TabsetComponent_li_1_span_4_Template, 2, 0, \"span\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const tabz_r1 = ctx.$implicit;\n    i0.ɵɵclassProp(\"active\", tabz_r1.active)(\"disabled\", tabz_r1.disabled);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(15, _c0, tabz_r1.customClass || \"\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"active\", tabz_r1.active)(\"disabled\", tabz_r1.disabled);\n    i0.ɵɵattribute(\"aria-controls\", tabz_r1.id ? tabz_r1.id : \"\")(\"aria-selected\", !!tabz_r1.active)(\"id\", tabz_r1.id ? tabz_r1.id + \"-link\" : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTransclude\", tabz_r1.headingRef);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(tabz_r1.heading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", tabz_r1.removable);\n  }\n}\nconst _c1 = [\"*\"];\nclass NgTranscludeDirective {\n  constructor(viewRef) {\n    this.viewRef = viewRef;\n  }\n  set ngTransclude(templateRef) {\n    this._ngTransclude = templateRef;\n    if (templateRef) {\n      this.viewRef.createEmbeddedView(templateRef);\n    }\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  get ngTransclude() {\n    return this._ngTransclude;\n  }\n}\nNgTranscludeDirective.ɵfac = function NgTranscludeDirective_Factory(t) {\n  return new (t || NgTranscludeDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n};\nNgTranscludeDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgTranscludeDirective,\n  selectors: [[\"\", \"ngTransclude\", \"\"]],\n  inputs: {\n    ngTransclude: \"ngTransclude\"\n  }\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgTranscludeDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngTransclude]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ViewContainerRef\n    }];\n  }, {\n    ngTransclude: [{\n      type: Input\n    }]\n  });\n})();\nclass TabsetConfig {\n  constructor() {\n    /** provides default navigation context class: 'tabs' or 'pills' */\n    this.type = 'tabs';\n    /** provides possibility to set keyNavigations enable or disable, by default is enable */\n    this.isKeysAllowed = true;\n    /** aria label for tab list */\n    this.ariaLabel = 'Tabs';\n  }\n}\nTabsetConfig.ɵfac = function TabsetConfig_Factory(t) {\n  return new (t || TabsetConfig)();\n};\nTabsetConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TabsetConfig,\n  factory: TabsetConfig.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TabsetConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\n// todo: add active event to tab\n// todo: fix? mixing static and dynamic tabs position tabs in order of creation\nclass TabsetComponent {\n  constructor(config, renderer, elementRef) {\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.clazz = true;\n    this.tabs = [];\n    this.classMap = {};\n    /** aria label for tab list */\n    this.ariaLabel = 'Tabs';\n    this.isDestroyed = false;\n    this._vertical = false;\n    this._justified = false;\n    this._type = 'tabs';\n    this._isKeysAllowed = true;\n    Object.assign(this, config);\n  }\n  /** if true tabs will be placed vertically */\n  get vertical() {\n    return this._vertical;\n  }\n  set vertical(value) {\n    this._vertical = value;\n    this.setClassMap();\n  }\n  /** if true tabs fill the container and have a consistent width */\n  get justified() {\n    return this._justified;\n  }\n  set justified(value) {\n    this._justified = value;\n    this.setClassMap();\n  }\n  /** navigation context class: 'tabs' or 'pills' */\n  get type() {\n    return this._type;\n  }\n  set type(value) {\n    this._type = value;\n    this.setClassMap();\n  }\n  get isKeysAllowed() {\n    return this._isKeysAllowed;\n  }\n  set isKeysAllowed(value) {\n    this._isKeysAllowed = value;\n  }\n  ngOnDestroy() {\n    this.isDestroyed = true;\n  }\n  addTab(tab) {\n    this.tabs.push(tab);\n    tab.active = this.tabs.length === 1 && !tab.active;\n  }\n  removeTab(tab, options = {\n    reselect: true,\n    emit: true\n  }) {\n    const index = this.tabs.indexOf(tab);\n    if (index === -1 || this.isDestroyed) {\n      return;\n    }\n    // Select a new tab if the tab to be removed is selected and not destroyed\n    if (options.reselect && tab.active && this.hasAvailableTabs(index)) {\n      const newActiveIndex = this.getClosestTabIndex(index);\n      this.tabs[newActiveIndex].active = true;\n    }\n    if (options.emit) {\n      tab.removed.emit(tab);\n    }\n    this.tabs.splice(index, 1);\n    if (tab.elementRef.nativeElement.parentNode) {\n      this.renderer.removeChild(tab.elementRef.nativeElement.parentNode, tab.elementRef.nativeElement);\n    }\n  }\n  keyNavActions(event, index) {\n    if (!this.isKeysAllowed) {\n      return;\n    }\n    const list = Array.from(this.elementRef.nativeElement.querySelectorAll('.nav-link'));\n    // const activeElList = list.filter((el: HTMLElement) => !el.classList.contains('disabled'));\n    if (event.keyCode === 13 || event.key === 'Enter' || event.keyCode === 32 || event.key === 'Space') {\n      event.preventDefault();\n      const currentTab = list[index % list.length];\n      currentTab.click();\n      return;\n    }\n    if (event.keyCode === 39 || event.key === 'RightArrow') {\n      let nextTab;\n      let shift = 1;\n      do {\n        nextTab = list[(index + shift) % list.length];\n        shift++;\n      } while (nextTab.classList.contains('disabled'));\n      nextTab.focus();\n      return;\n    }\n    if (event.keyCode === 37 || event.key === 'LeftArrow') {\n      let previousTab;\n      let shift = 1;\n      let i = index;\n      do {\n        if (i - shift < 0) {\n          i = list.length - 1;\n          previousTab = list[i];\n          shift = 0;\n        } else {\n          previousTab = list[i - shift];\n        }\n        shift++;\n      } while (previousTab.classList.contains('disabled'));\n      previousTab.focus();\n      return;\n    }\n    if (event.keyCode === 36 || event.key === 'Home') {\n      event.preventDefault();\n      let firstTab;\n      let shift = 0;\n      do {\n        firstTab = list[shift % list.length];\n        shift++;\n      } while (firstTab.classList.contains('disabled'));\n      firstTab.focus();\n      return;\n    }\n    if (event.keyCode === 35 || event.key === 'End') {\n      event.preventDefault();\n      let lastTab;\n      let shift = 1;\n      let i = index;\n      do {\n        if (i - shift < 0) {\n          i = list.length - 1;\n          lastTab = list[i];\n          shift = 0;\n        } else {\n          lastTab = list[i - shift];\n        }\n        shift++;\n      } while (lastTab.classList.contains('disabled'));\n      lastTab.focus();\n      return;\n    }\n    if (event.keyCode === 46 || event.key === 'Delete') {\n      if (this.tabs[index].removable) {\n        this.removeTab(this.tabs[index]);\n        if (list[index + 1]) {\n          list[(index + 1) % list.length].focus();\n          return;\n        }\n        if (list[list.length - 1]) {\n          list[0].focus();\n        }\n      }\n    }\n  }\n  getClosestTabIndex(index) {\n    const tabsLength = this.tabs.length;\n    if (!tabsLength) {\n      return -1;\n    }\n    for (let step = 1; step <= tabsLength; step += 1) {\n      const prevIndex = index - step;\n      const nextIndex = index + step;\n      if (this.tabs[prevIndex] && !this.tabs[prevIndex].disabled) {\n        return prevIndex;\n      }\n      if (this.tabs[nextIndex] && !this.tabs[nextIndex].disabled) {\n        return nextIndex;\n      }\n    }\n    return -1;\n  }\n  hasAvailableTabs(index) {\n    const tabsLength = this.tabs.length;\n    if (!tabsLength) {\n      return false;\n    }\n    for (let i = 0; i < tabsLength; i += 1) {\n      if (!this.tabs[i].disabled && i !== index) {\n        return true;\n      }\n    }\n    return false;\n  }\n  setClassMap() {\n    this.classMap = {\n      'nav-stacked': this.vertical,\n      'flex-column': this.vertical,\n      'nav-justified': this.justified,\n      [`nav-${this.type}`]: true\n    };\n  }\n}\nTabsetComponent.ɵfac = function TabsetComponent_Factory(t) {\n  return new (t || TabsetComponent)(i0.ɵɵdirectiveInject(TabsetConfig), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nTabsetComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TabsetComponent,\n  selectors: [[\"tabset\"]],\n  hostVars: 2,\n  hostBindings: function TabsetComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"tab-container\", ctx.clazz);\n    }\n  },\n  inputs: {\n    vertical: \"vertical\",\n    justified: \"justified\",\n    type: \"type\"\n  },\n  ngContentSelectors: _c1,\n  decls: 4,\n  vars: 3,\n  consts: [[\"role\", \"tablist\", 1, \"nav\", 3, \"ngClass\", \"click\"], [3, \"ngClass\", \"active\", \"disabled\", \"keydown\", 4, \"ngFor\", \"ngForOf\"], [1, \"tab-content\"], [3, \"ngClass\", \"keydown\"], [\"href\", \"javascript:void(0);\", \"role\", \"tab\", 1, \"nav-link\", 3, \"click\"], [3, \"ngTransclude\"], [\"class\", \"bs-remove-tab\", 3, \"click\", 4, \"ngIf\"], [1, \"bs-remove-tab\", 3, \"click\"]],\n  template: function TabsetComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"ul\", 0);\n      i0.ɵɵlistener(\"click\", function TabsetComponent_Template_ul_click_0_listener($event) {\n        return $event.preventDefault();\n      });\n      i0.ɵɵtemplate(1, TabsetComponent_li_1_Template, 5, 17, \"li\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵprojection(3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", ctx.classMap);\n      i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tabs);\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, NgTranscludeDirective],\n  styles: [\"[_nghost-%COMP%]   .nav-tabs[_ngcontent-%COMP%]   .nav-item.disabled[_ngcontent-%COMP%]   a.disabled[_ngcontent-%COMP%]{cursor:default}\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TabsetComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tabset',\n      template: \"<ul class=\\\"nav\\\" [ngClass]=\\\"classMap\\\"\\n    (click)=\\\"$event.preventDefault()\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    role=\\\"tablist\\\">\\n  <li *ngFor=\\\"let tabz of tabs; let i = index\\\" [ngClass]=\\\"['nav-item', tabz.customClass || '']\\\"\\n      [class.active]=\\\"tabz.active\\\" [class.disabled]=\\\"tabz.disabled\\\" (keydown)=\\\"keyNavActions($event, i)\\\">\\n    <a href=\\\"javascript:void(0);\\\" class=\\\"nav-link\\\" role=\\\"tab\\\"\\n       [attr.aria-controls]=\\\"tabz.id ? tabz.id : ''\\\"\\n       [attr.aria-selected]=\\\"!!tabz.active\\\"\\n       [attr.id]=\\\"tabz.id ? tabz.id + '-link' : ''\\\"\\n       [class.active]=\\\"tabz.active\\\" [class.disabled]=\\\"tabz.disabled\\\"\\n       (click)=\\\"tabz.active = true\\\">\\n      <span [ngTransclude]=\\\"tabz.headingRef\\\">{{ tabz.heading }}</span>\\n      <span *ngIf=\\\"tabz.removable\\\" (click)=\\\"$event.preventDefault(); removeTab(tabz);\\\" class=\\\"bs-remove-tab\\\"> &#10060;</span>\\n    </a>\\n  </li>\\n</ul>\\n<div class=\\\"tab-content\\\">\\n  <ng-content></ng-content>\\n</div>\\n\",\n      styles: [\":host .nav-tabs .nav-item.disabled a.disabled{cursor:default}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: TabsetConfig\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    vertical: [{\n      type: Input\n    }],\n    justified: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    clazz: [{\n      type: HostBinding,\n      args: ['class.tab-container']\n    }]\n  });\n})();\nclass TabDirective {\n  constructor(tabset, elementRef, renderer) {\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    /** if true tab can not be activated */\n    this.disabled = false;\n    /** if true tab can be removable, additional button will appear */\n    this.removable = false;\n    /** fired when tab became active, $event:Tab equals to selected instance of Tab component */\n    this.selectTab = new EventEmitter();\n    /** fired when tab became inactive, $event:Tab equals to deselected instance of Tab component */\n    this.deselect = new EventEmitter();\n    /** fired before tab will be removed, $event:Tab equals to instance of removed tab */\n    this.removed = new EventEmitter();\n    this.addClass = true;\n    this.role = 'tabpanel';\n    this._active = false;\n    this._customClass = '';\n    this.tabset = tabset;\n    this.tabset.addTab(this);\n  }\n  /** if set, will be added to the tab's class attribute. Multiple classes are supported. */\n  get customClass() {\n    return this._customClass;\n  }\n  set customClass(customClass) {\n    if (this.customClass) {\n      this.customClass.split(' ').forEach(cssClass => {\n        this.renderer.removeClass(this.elementRef.nativeElement, cssClass);\n      });\n    }\n    this._customClass = customClass ? customClass.trim() : '';\n    if (this.customClass) {\n      this.customClass.split(' ').forEach(cssClass => {\n        this.renderer.addClass(this.elementRef.nativeElement, cssClass);\n      });\n    }\n  }\n  /** tab active state toggle */\n  get active() {\n    return this._active;\n  }\n  set active(active) {\n    if (this._active === active) {\n      return;\n    }\n    if (this.disabled && active || !active) {\n      if (this._active && !active) {\n        this.deselect.emit(this);\n        this._active = active;\n      }\n      return;\n    }\n    this._active = active;\n    this.selectTab.emit(this);\n    this.tabset.tabs.forEach(tab => {\n      if (tab !== this) {\n        tab.active = false;\n      }\n    });\n  }\n  get ariaLabelledby() {\n    return this.id ? `${this.id}-link` : '';\n  }\n  ngOnInit() {\n    this.removable = !!this.removable;\n  }\n  ngOnDestroy() {\n    this.tabset.removeTab(this, {\n      reselect: false,\n      emit: false\n    });\n  }\n}\nTabDirective.ɵfac = function TabDirective_Factory(t) {\n  return new (t || TabDirective)(i0.ɵɵdirectiveInject(TabsetComponent), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\nTabDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TabDirective,\n  selectors: [[\"tab\"], [\"\", \"tab\", \"\"]],\n  hostVars: 7,\n  hostBindings: function TabDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"id\", ctx.id)(\"role\", ctx.role)(\"aria-labelledby\", ctx.ariaLabelledby);\n      i0.ɵɵclassProp(\"active\", ctx.active)(\"tab-pane\", ctx.addClass);\n    }\n  },\n  inputs: {\n    heading: \"heading\",\n    id: \"id\",\n    disabled: \"disabled\",\n    removable: \"removable\",\n    customClass: \"customClass\",\n    active: \"active\"\n  },\n  outputs: {\n    selectTab: \"selectTab\",\n    deselect: \"deselect\",\n    removed: \"removed\"\n  },\n  exportAs: [\"tab\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TabDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'tab, [tab]',\n      exportAs: 'tab'\n    }]\n  }], function () {\n    return [{\n      type: TabsetComponent\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    heading: [{\n      type: Input\n    }],\n    id: [{\n      type: HostBinding,\n      args: ['attr.id']\n    }, {\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    removable: [{\n      type: Input\n    }],\n    customClass: [{\n      type: Input\n    }],\n    active: [{\n      type: HostBinding,\n      args: ['class.active']\n    }, {\n      type: Input\n    }],\n    selectTab: [{\n      type: Output\n    }],\n    deselect: [{\n      type: Output\n    }],\n    removed: [{\n      type: Output\n    }],\n    addClass: [{\n      type: HostBinding,\n      args: ['class.tab-pane']\n    }],\n    role: [{\n      type: HostBinding,\n      args: ['attr.role']\n    }],\n    ariaLabelledby: [{\n      type: HostBinding,\n      args: ['attr.aria-labelledby']\n    }]\n  });\n})();\n\n/** Should be used to mark <ng-template> element as a template for tab heading */\nclass TabHeadingDirective {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(templateRef, tab) {\n    tab.headingRef = templateRef;\n  }\n}\nTabHeadingDirective.ɵfac = function TabHeadingDirective_Factory(t) {\n  return new (t || TabHeadingDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(TabDirective));\n};\nTabHeadingDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TabHeadingDirective,\n  selectors: [[\"\", \"tabHeading\", \"\"]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TabHeadingDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[tabHeading]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }, {\n      type: TabDirective\n    }];\n  }, null);\n})();\nclass TabsModule {\n  static forRoot() {\n    return {\n      ngModule: TabsModule,\n      providers: []\n    };\n  }\n}\nTabsModule.ɵfac = function TabsModule_Factory(t) {\n  return new (t || TabsModule)();\n};\nTabsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TabsModule\n});\nTabsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TabsModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [NgTranscludeDirective, TabDirective, TabsetComponent, TabHeadingDirective],\n      exports: [TabDirective, TabsetComponent, TabHeadingDirective, NgTranscludeDirective]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgTranscludeDirective, TabDirective, TabHeadingDirective, TabsModule, TabsetComponent, TabsetConfig };","map":{"version":3,"names":["i0","Directive","Input","Injectable","Component","HostBinding","EventEmitter","Output","NgModule","i2","CommonModule","NgTranscludeDirective","constructor","viewRef","ngTransclude","templateRef","_ngTransclude","createEmbeddedView","ɵfac","ViewContainerRef","ɵdir","type","args","selector","TabsetConfig","isKeysAllowed","ariaLabel","ɵprov","providedIn","TabsetComponent","config","renderer","elementRef","clazz","tabs","classMap","isDestroyed","_vertical","_justified","_type","_isKeysAllowed","Object","assign","vertical","value","setClassMap","justified","ngOnDestroy","addTab","tab","push","active","length","removeTab","options","reselect","emit","index","indexOf","hasAvailableTabs","newActiveIndex","getClosestTabIndex","removed","splice","nativeElement","parentNode","removeChild","keyNavActions","event","list","Array","from","querySelectorAll","keyCode","key","preventDefault","currentTab","click","nextTab","shift","classList","contains","focus","previousTab","i","firstTab","lastTab","removable","tabsLength","step","prevIndex","nextIndex","disabled","Renderer2","ElementRef","ɵcmp","NgClass","NgForOf","NgIf","template","styles","TabDirective","tabset","selectTab","deselect","addClass","role","_active","_customClass","customClass","split","forEach","cssClass","removeClass","trim","ariaLabelledby","id","ngOnInit","exportAs","heading","TabHeadingDirective","headingRef","TemplateRef","TabsModule","forRoot","ngModule","providers","ɵmod","ɵinj","imports","declarations","exports"],"sources":["/Users/user/PycharmProjects/builderspointAPI/client/node_modules/ngx-bootstrap/tabs/fesm2020/ngx-bootstrap-tabs.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Directive, Input, Injectable, Component, HostBinding, EventEmitter, Output, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass NgTranscludeDirective {\n    constructor(viewRef) {\n        this.viewRef = viewRef;\n    }\n    set ngTransclude(templateRef) {\n        this._ngTransclude = templateRef;\n        if (templateRef) {\n            this.viewRef.createEmbeddedView(templateRef);\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get ngTransclude() {\n        return this._ngTransclude;\n    }\n}\nNgTranscludeDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: NgTranscludeDirective, deps: [{ token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgTranscludeDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.3\", type: NgTranscludeDirective, selector: \"[ngTransclude]\", inputs: { ngTransclude: \"ngTransclude\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: NgTranscludeDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngTransclude]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }]; }, propDecorators: { ngTransclude: [{\n                type: Input\n            }] } });\n\nclass TabsetConfig {\n    constructor() {\n        /** provides default navigation context class: 'tabs' or 'pills' */\n        this.type = 'tabs';\n        /** provides possibility to set keyNavigations enable or disable, by default is enable */\n        this.isKeysAllowed = true;\n        /** aria label for tab list */\n        this.ariaLabel = 'Tabs';\n    }\n}\nTabsetConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: TabsetConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nTabsetConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: TabsetConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: TabsetConfig, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\n// todo: add active event to tab\n// todo: fix? mixing static and dynamic tabs position tabs in order of creation\nclass TabsetComponent {\n    constructor(config, renderer, elementRef) {\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this.clazz = true;\n        this.tabs = [];\n        this.classMap = {};\n        /** aria label for tab list */\n        this.ariaLabel = 'Tabs';\n        this.isDestroyed = false;\n        this._vertical = false;\n        this._justified = false;\n        this._type = 'tabs';\n        this._isKeysAllowed = true;\n        Object.assign(this, config);\n    }\n    /** if true tabs will be placed vertically */\n    get vertical() {\n        return this._vertical;\n    }\n    set vertical(value) {\n        this._vertical = value;\n        this.setClassMap();\n    }\n    /** if true tabs fill the container and have a consistent width */\n    get justified() {\n        return this._justified;\n    }\n    set justified(value) {\n        this._justified = value;\n        this.setClassMap();\n    }\n    /** navigation context class: 'tabs' or 'pills' */\n    get type() {\n        return this._type;\n    }\n    set type(value) {\n        this._type = value;\n        this.setClassMap();\n    }\n    get isKeysAllowed() {\n        return this._isKeysAllowed;\n    }\n    set isKeysAllowed(value) {\n        this._isKeysAllowed = value;\n    }\n    ngOnDestroy() {\n        this.isDestroyed = true;\n    }\n    addTab(tab) {\n        this.tabs.push(tab);\n        tab.active = this.tabs.length === 1 && !tab.active;\n    }\n    removeTab(tab, options = { reselect: true, emit: true }) {\n        const index = this.tabs.indexOf(tab);\n        if (index === -1 || this.isDestroyed) {\n            return;\n        }\n        // Select a new tab if the tab to be removed is selected and not destroyed\n        if (options.reselect && tab.active && this.hasAvailableTabs(index)) {\n            const newActiveIndex = this.getClosestTabIndex(index);\n            this.tabs[newActiveIndex].active = true;\n        }\n        if (options.emit) {\n            tab.removed.emit(tab);\n        }\n        this.tabs.splice(index, 1);\n        if (tab.elementRef.nativeElement.parentNode) {\n            this.renderer.removeChild(tab.elementRef.nativeElement.parentNode, tab.elementRef.nativeElement);\n        }\n    }\n    keyNavActions(event, index) {\n        if (!this.isKeysAllowed) {\n            return;\n        }\n        const list = Array.from(this.elementRef.nativeElement.querySelectorAll('.nav-link'));\n        // const activeElList = list.filter((el: HTMLElement) => !el.classList.contains('disabled'));\n        if (event.keyCode === 13 || event.key === 'Enter' || event.keyCode === 32 || event.key === 'Space') {\n            event.preventDefault();\n            const currentTab = list[(index) % list.length];\n            currentTab.click();\n            return;\n        }\n        if (event.keyCode === 39 || event.key === 'RightArrow') {\n            let nextTab;\n            let shift = 1;\n            do {\n                nextTab = list[(index + shift) % list.length];\n                shift++;\n            } while (nextTab.classList.contains('disabled'));\n            nextTab.focus();\n            return;\n        }\n        if (event.keyCode === 37 || event.key === 'LeftArrow') {\n            let previousTab;\n            let shift = 1;\n            let i = index;\n            do {\n                if ((i - shift) < 0) {\n                    i = list.length - 1;\n                    previousTab = list[i];\n                    shift = 0;\n                }\n                else {\n                    previousTab = list[i - shift];\n                }\n                shift++;\n            } while (previousTab.classList.contains('disabled'));\n            previousTab.focus();\n            return;\n        }\n        if (event.keyCode === 36 || event.key === 'Home') {\n            event.preventDefault();\n            let firstTab;\n            let shift = 0;\n            do {\n                firstTab = list[shift % list.length];\n                shift++;\n            } while (firstTab.classList.contains('disabled'));\n            firstTab.focus();\n            return;\n        }\n        if (event.keyCode === 35 || event.key === 'End') {\n            event.preventDefault();\n            let lastTab;\n            let shift = 1;\n            let i = index;\n            do {\n                if ((i - shift) < 0) {\n                    i = list.length - 1;\n                    lastTab = list[i];\n                    shift = 0;\n                }\n                else {\n                    lastTab = list[i - shift];\n                }\n                shift++;\n            } while (lastTab.classList.contains('disabled'));\n            lastTab.focus();\n            return;\n        }\n        if (event.keyCode === 46 || event.key === 'Delete') {\n            if (this.tabs[index].removable) {\n                this.removeTab(this.tabs[index]);\n                if (list[index + 1]) {\n                    list[(index + 1) % list.length].focus();\n                    return;\n                }\n                if (list[list.length - 1]) {\n                    list[0].focus();\n                }\n            }\n        }\n    }\n    getClosestTabIndex(index) {\n        const tabsLength = this.tabs.length;\n        if (!tabsLength) {\n            return -1;\n        }\n        for (let step = 1; step <= tabsLength; step += 1) {\n            const prevIndex = index - step;\n            const nextIndex = index + step;\n            if (this.tabs[prevIndex] && !this.tabs[prevIndex].disabled) {\n                return prevIndex;\n            }\n            if (this.tabs[nextIndex] && !this.tabs[nextIndex].disabled) {\n                return nextIndex;\n            }\n        }\n        return -1;\n    }\n    hasAvailableTabs(index) {\n        const tabsLength = this.tabs.length;\n        if (!tabsLength) {\n            return false;\n        }\n        for (let i = 0; i < tabsLength; i += 1) {\n            if (!this.tabs[i].disabled && i !== index) {\n                return true;\n            }\n        }\n        return false;\n    }\n    setClassMap() {\n        this.classMap = {\n            'nav-stacked': this.vertical,\n            'flex-column': this.vertical,\n            'nav-justified': this.justified,\n            [`nav-${this.type}`]: true\n        };\n    }\n}\nTabsetComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: TabsetComponent, deps: [{ token: TabsetConfig }, { token: i0.Renderer2 }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nTabsetComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.3\", type: TabsetComponent, selector: \"tabset\", inputs: { vertical: \"vertical\", justified: \"justified\", type: \"type\" }, host: { properties: { \"class.tab-container\": \"this.clazz\" } }, ngImport: i0, template: \"<ul class=\\\"nav\\\" [ngClass]=\\\"classMap\\\"\\n    (click)=\\\"$event.preventDefault()\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    role=\\\"tablist\\\">\\n  <li *ngFor=\\\"let tabz of tabs; let i = index\\\" [ngClass]=\\\"['nav-item', tabz.customClass || '']\\\"\\n      [class.active]=\\\"tabz.active\\\" [class.disabled]=\\\"tabz.disabled\\\" (keydown)=\\\"keyNavActions($event, i)\\\">\\n    <a href=\\\"javascript:void(0);\\\" class=\\\"nav-link\\\" role=\\\"tab\\\"\\n       [attr.aria-controls]=\\\"tabz.id ? tabz.id : ''\\\"\\n       [attr.aria-selected]=\\\"!!tabz.active\\\"\\n       [attr.id]=\\\"tabz.id ? tabz.id + '-link' : ''\\\"\\n       [class.active]=\\\"tabz.active\\\" [class.disabled]=\\\"tabz.disabled\\\"\\n       (click)=\\\"tabz.active = true\\\">\\n      <span [ngTransclude]=\\\"tabz.headingRef\\\">{{ tabz.heading }}</span>\\n      <span *ngIf=\\\"tabz.removable\\\" (click)=\\\"$event.preventDefault(); removeTab(tabz);\\\" class=\\\"bs-remove-tab\\\"> &#10060;</span>\\n    </a>\\n  </li>\\n</ul>\\n<div class=\\\"tab-content\\\">\\n  <ng-content></ng-content>\\n</div>\\n\", styles: [\":host .nav-tabs .nav-item.disabled a.disabled{cursor:default}\\n\"], dependencies: [{ kind: \"directive\", type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: NgTranscludeDirective, selector: \"[ngTransclude]\", inputs: [\"ngTransclude\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: TabsetComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'tabset', template: \"<ul class=\\\"nav\\\" [ngClass]=\\\"classMap\\\"\\n    (click)=\\\"$event.preventDefault()\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    role=\\\"tablist\\\">\\n  <li *ngFor=\\\"let tabz of tabs; let i = index\\\" [ngClass]=\\\"['nav-item', tabz.customClass || '']\\\"\\n      [class.active]=\\\"tabz.active\\\" [class.disabled]=\\\"tabz.disabled\\\" (keydown)=\\\"keyNavActions($event, i)\\\">\\n    <a href=\\\"javascript:void(0);\\\" class=\\\"nav-link\\\" role=\\\"tab\\\"\\n       [attr.aria-controls]=\\\"tabz.id ? tabz.id : ''\\\"\\n       [attr.aria-selected]=\\\"!!tabz.active\\\"\\n       [attr.id]=\\\"tabz.id ? tabz.id + '-link' : ''\\\"\\n       [class.active]=\\\"tabz.active\\\" [class.disabled]=\\\"tabz.disabled\\\"\\n       (click)=\\\"tabz.active = true\\\">\\n      <span [ngTransclude]=\\\"tabz.headingRef\\\">{{ tabz.heading }}</span>\\n      <span *ngIf=\\\"tabz.removable\\\" (click)=\\\"$event.preventDefault(); removeTab(tabz);\\\" class=\\\"bs-remove-tab\\\"> &#10060;</span>\\n    </a>\\n  </li>\\n</ul>\\n<div class=\\\"tab-content\\\">\\n  <ng-content></ng-content>\\n</div>\\n\", styles: [\":host .nav-tabs .nav-item.disabled a.disabled{cursor:default}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: TabsetConfig }, { type: i0.Renderer2 }, { type: i0.ElementRef }]; }, propDecorators: { vertical: [{\n                type: Input\n            }], justified: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], clazz: [{\n                type: HostBinding,\n                args: ['class.tab-container']\n            }] } });\n\nclass TabDirective {\n    constructor(tabset, elementRef, renderer) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        /** if true tab can not be activated */\n        this.disabled = false;\n        /** if true tab can be removable, additional button will appear */\n        this.removable = false;\n        /** fired when tab became active, $event:Tab equals to selected instance of Tab component */\n        this.selectTab = new EventEmitter();\n        /** fired when tab became inactive, $event:Tab equals to deselected instance of Tab component */\n        this.deselect = new EventEmitter();\n        /** fired before tab will be removed, $event:Tab equals to instance of removed tab */\n        this.removed = new EventEmitter();\n        this.addClass = true;\n        this.role = 'tabpanel';\n        this._active = false;\n        this._customClass = '';\n        this.tabset = tabset;\n        this.tabset.addTab(this);\n    }\n    /** if set, will be added to the tab's class attribute. Multiple classes are supported. */\n    get customClass() {\n        return this._customClass;\n    }\n    set customClass(customClass) {\n        if (this.customClass) {\n            this.customClass.split(' ').forEach((cssClass) => {\n                this.renderer.removeClass(this.elementRef.nativeElement, cssClass);\n            });\n        }\n        this._customClass = customClass ? customClass.trim() : '';\n        if (this.customClass) {\n            this.customClass.split(' ').forEach((cssClass) => {\n                this.renderer.addClass(this.elementRef.nativeElement, cssClass);\n            });\n        }\n    }\n    /** tab active state toggle */\n    get active() {\n        return this._active;\n    }\n    set active(active) {\n        if (this._active === active) {\n            return;\n        }\n        if ((this.disabled && active) || !active) {\n            if (this._active && !active) {\n                this.deselect.emit(this);\n                this._active = active;\n            }\n            return;\n        }\n        this._active = active;\n        this.selectTab.emit(this);\n        this.tabset.tabs.forEach((tab) => {\n            if (tab !== this) {\n                tab.active = false;\n            }\n        });\n    }\n    get ariaLabelledby() {\n        return this.id ? `${this.id}-link` : '';\n    }\n    ngOnInit() {\n        this.removable = !!this.removable;\n    }\n    ngOnDestroy() {\n        this.tabset.removeTab(this, { reselect: false, emit: false });\n    }\n}\nTabDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: TabDirective, deps: [{ token: TabsetComponent }, { token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\nTabDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.3\", type: TabDirective, selector: \"tab, [tab]\", inputs: { heading: \"heading\", id: \"id\", disabled: \"disabled\", removable: \"removable\", customClass: \"customClass\", active: \"active\" }, outputs: { selectTab: \"selectTab\", deselect: \"deselect\", removed: \"removed\" }, host: { properties: { \"attr.id\": \"this.id\", \"class.active\": \"this.active\", \"class.tab-pane\": \"this.addClass\", \"attr.role\": \"this.role\", \"attr.aria-labelledby\": \"this.ariaLabelledby\" } }, exportAs: [\"tab\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: TabDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'tab, [tab]', exportAs: 'tab' }]\n        }], ctorParameters: function () { return [{ type: TabsetComponent }, { type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { heading: [{\n                type: Input\n            }], id: [{\n                type: HostBinding,\n                args: ['attr.id']\n            }, {\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], removable: [{\n                type: Input\n            }], customClass: [{\n                type: Input\n            }], active: [{\n                type: HostBinding,\n                args: ['class.active']\n            }, {\n                type: Input\n            }], selectTab: [{\n                type: Output\n            }], deselect: [{\n                type: Output\n            }], removed: [{\n                type: Output\n            }], addClass: [{\n                type: HostBinding,\n                args: ['class.tab-pane']\n            }], role: [{\n                type: HostBinding,\n                args: ['attr.role']\n            }], ariaLabelledby: [{\n                type: HostBinding,\n                args: ['attr.aria-labelledby']\n            }] } });\n\n/** Should be used to mark <ng-template> element as a template for tab heading */\nclass TabHeadingDirective {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(templateRef, tab) {\n        tab.headingRef = templateRef;\n    }\n}\nTabHeadingDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: TabHeadingDirective, deps: [{ token: i0.TemplateRef }, { token: TabDirective }], target: i0.ɵɵFactoryTarget.Directive });\nTabHeadingDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.3\", type: TabHeadingDirective, selector: \"[tabHeading]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: TabHeadingDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[tabHeading]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: TabDirective }]; } });\n\nclass TabsModule {\n    static forRoot() {\n        return {\n            ngModule: TabsModule,\n            providers: []\n        };\n    }\n}\nTabsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: TabsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTabsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.3\", ngImport: i0, type: TabsModule, declarations: [NgTranscludeDirective,\n        TabDirective,\n        TabsetComponent,\n        TabHeadingDirective], imports: [CommonModule], exports: [TabDirective,\n        TabsetComponent,\n        TabHeadingDirective,\n        NgTranscludeDirective] });\nTabsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: TabsModule, imports: [CommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: TabsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [\n                        NgTranscludeDirective,\n                        TabDirective,\n                        TabsetComponent,\n                        TabHeadingDirective\n                    ],\n                    exports: [\n                        TabDirective,\n                        TabsetComponent,\n                        TabHeadingDirective,\n                        NgTranscludeDirective\n                    ]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgTranscludeDirective, TabDirective, TabHeadingDirective, TabsModule, TabsetComponent, TabsetConfig };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}